plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "7.5.0"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.2.5'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.21'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.32'
    implementation 'javax.persistence:persistence-api:1.0.2'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'ch.qos.logback:logback-classic:1.4.12'
    implementation 'org.codehaus.janino:janino:3.1.6'
    testImplementation 'org.codehaus.janino:janino:3.1.6'
    testImplementation 'ch.qos.logback:logback-classic:1.4.12'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.5'
    implementation('com.github.ben-manes.caffeine:caffeine') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/static/get-client-info.yaml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("org.example.api")
    modelPackage.set("org.example.model")
    invokerPackage.set("org.example.invoker")
    configOptions.set([
            dateLibrary: "custom",
            interfaceOnly: "true",
            useSpringBoot3: "true"
    ])

    typeMappings = ['string+date-time':'Instant']
    importMappings = ['Instant':'java.time.Instant']
}

compileJava.dependsOn tasks.openApiGenerate
sourceSets {
    getByName("main") {
        java {
            srcDir("$buildDir/generated/src/main/java")
        }
    }
}

ext {
    swaggerUiUrl = '/get-client-info.yaml'
}

bootRun {
    systemProperty 'springdoc.swagger-ui.url', swaggerUiUrl
}